/*
 * XMPPClientSignInUI.java
 *
 * Created on 10 April 2008, 17:32
 */
package xmppclient;

import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import org.jivesoftware.smack.*;

/**
 *
 * @author  lee
 */
public class XMPPClientSignInUI extends javax.swing.JDialog 
{
    /** Creates new form XMPPClientSignInUI */
    public XMPPClientSignInUI(XMPPClientUI clientUI) 
    {
        super(clientUI, true);
        
        initComponents();
        validateInputs();
    }
    
    public void enableComponents(boolean enable)
    {
        for(Component c:containerPanel.getComponents())
        {
            c.setEnabled(enable);
        }
        
        okButton.setEnabled(enable);
        cancelButton.setEnabled(enable);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        containerPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        storedConnectionComboBox = new javax.swing.JComboBox();
        usernameTextField = new javax.swing.JTextField();
        resourceTextField = new javax.swing.JTextField();
        hostTextField = new javax.swing.JTextField();
        storeConnectionCheckBox = new javax.swing.JCheckBox();
        passwordTextField = new javax.swing.JPasswordField();
        portTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sign In");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(400, 280));
        setName("Sign In"); // NOI18N

        containerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sign In Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 11))); // NOI18N

        jLabel1.setLabelFor(storedConnectionComboBox);
        jLabel1.setText("Stored connection");

        jLabel2.setLabelFor(usernameTextField);
        jLabel2.setText("Username");

        jLabel3.setLabelFor(passwordTextField);
        jLabel3.setText("Password");

        jLabel4.setLabelFor(resourceTextField);
        jLabel4.setText("Resource");

        jLabel5.setLabelFor(hostTextField);
        jLabel5.setText("Host");

        jLabel6.setLabelFor(storeConnectionCheckBox);
        jLabel6.setText("Store connection?");

        storedConnectionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1" }));
        storedConnectionComboBox.setEnabled(false);

        usernameTextField.setText("lee");
        usernameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usernameTextFieldKeyReleased(evt);
            }
        });

        resourceTextField.setText("home");
        resourceTextField.setToolTipText("Enter the resource");

        hostTextField.setText("192.168.0.8");
        hostTextField.setToolTipText("Enter the server IP address or host name");
        hostTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                hostTextFieldKeyReleased(evt);
            }
        });

        storeConnectionCheckBox.setToolTipText("Tick this box to store this connection for future use");

        passwordTextField.setText("password");
        passwordTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordTextFieldKeyReleased(evt);
            }
        });

        portTextField.setText("5222");
        portTextField.setToolTipText("Set the port number or leave as default");
        portTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                portTextFieldKeyReleased(evt);
            }
        });

        jLabel7.setText("Port");

        javax.swing.GroupLayout containerPanelLayout = new javax.swing.GroupLayout(containerPanel);
        containerPanel.setLayout(containerPanelLayout);
        containerPanelLayout.setHorizontalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(storedConnectionComboBox, 0, 267, Short.MAX_VALUE))
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usernameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE))
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passwordTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE))
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resourceTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE))
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hostTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(storeConnectionCheckBox)))
                .addContainerGap())
        );

        containerPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4, jLabel5, jLabel6});

        containerPanelLayout.setVerticalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelLayout.createSequentialGroup()
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(storedConnectionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(resourceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(hostTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(storeConnectionCheckBox))
                .addContainerGap())
        );

        okButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xmppclient/images/tick.png"))); // NOI18N
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xmppclient/images/cancel.png"))); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(containerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        
        validateInputs();
        enableComponents(false);
        (new ConnectSwingWorker()).execute();
        /*
        try
        {
            XMPPClientUI.connection.connect();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,
                    "Could not connect to host " + hostTextField.getText(),
                    "Server Inaccessible",
                    JOptionPane.ERROR_MESSAGE);
            
            return;
        }
        
        try
        {
            XMPPClientUI.connection.login(usernameTextField.getText(),
                    new String(passwordTextField.getPassword()),
                    resourceTextField.getText());
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,
                    "Could not log in with the username and password supplied",
                    "Authentication Failed",
                    JOptionPane.ERROR_MESSAGE);
            
            return;
        }
        
        storeConnection(storeConnectionCheckBox.isSelected());
        
        this.dispose();*/
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

private void usernameTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameTextFieldKeyReleased
    validateInputs();
}//GEN-LAST:event_usernameTextFieldKeyReleased

private void passwordTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTextFieldKeyReleased
    validateInputs();
}//GEN-LAST:event_passwordTextFieldKeyReleased

private void hostTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hostTextFieldKeyReleased
    validateInputs();
}//GEN-LAST:event_hostTextFieldKeyReleased

private void portTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_portTextFieldKeyReleased
    validateInputs();
}//GEN-LAST:event_portTextFieldKeyReleased
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel containerPanel;
    private javax.swing.JTextField hostTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton okButton;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JTextField portTextField;
    private javax.swing.JTextField resourceTextField;
    private javax.swing.JCheckBox storeConnectionCheckBox;
    private javax.swing.JComboBox storedConnectionComboBox;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables

    private void storeConnection(boolean store)
    {
        if(!store) return;
    }

    private void validateInputs()
    {
        okButton.setEnabled(false);
        
        // validate lengths
        if(usernameTextField.getText().equals("")) return;
        if(passwordTextField.getPassword().length == 0) return;
        if(portTextField.getText().equals("")) return;
        if(hostTextField.getText().equals("")) return;
        
        try
        {
            Integer.parseInt(portTextField.getText());
        }
        catch(NumberFormatException ex)
        {
            return;
        }
        
        okButton.setEnabled(true);
    }
    
    private class ConnectSwingWorker extends SwingWorker<XMPPConnection, Object>
    {
        @Override
        protected XMPPConnection doInBackground() throws Exception
        {
            ConnectionConfiguration config = new ConnectionConfiguration(
                hostTextField.getText(), 
                Integer.parseInt(portTextField.getText()));
            
            XMPPConnection connection = new XMPPConnection(config);
            
            connection.connect();
            connection.login(usernameTextField.getText(),
                    new String(passwordTextField.getPassword()),
                    resourceTextField.getText());
            
            return connection;
        }

        @Override
        protected void done()
        {
            try
            {
                XMPPClientUI.connection = get();
                XMPPClientSignInUI.this.dispose();
            }
            catch(Exception ex)
            {
                JOptionPane.showMessageDialog(XMPPClientSignInUI.this,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
                enableComponents(true);
            }
        }
    }
}
