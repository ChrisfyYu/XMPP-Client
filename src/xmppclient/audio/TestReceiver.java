/*
 * TestReceiver2.java
 *
 * Created on 08 May 2008, 16:12
 */
package xmppclient.audio;

import javax.swing.DefaultListModel;
import org.jivesoftware.smack.Chat;
import org.jivesoftware.smack.ChatManagerListener;
import org.jivesoftware.smack.MessageListener;
import org.jivesoftware.smack.XMPPConnection;
import org.jivesoftware.smack.XMPPException;
import org.jivesoftware.smack.packet.DefaultPacketExtension;
import org.jivesoftware.smack.packet.Message;
import org.jivesoftware.smack.packet.PacketExtension;

/**
 *
 * @author  Lee Boynton (323326)
 */
public class TestReceiver extends javax.swing.JFrame implements ChatManagerListener, MessageListener
{
    private XMPPConnection connection;
    /** Creates new form TestReceiver2 */
    public TestReceiver()
    {
        //XMPPConnection.DEBUG_ENABLED = true;
        
        initComponents();
        try
        {
            connection = new XMPPConnection("192.168.0.8");
            connection.connect();
            connection.login("bob", "password");
            connection.getChatManager().addChatListener(this);
        }
        catch (XMPPException ex)
        {
            ex.printStackTrace();
        }
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        audioList = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(audioList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            @Override
            public void run()
            {
                new TestReceiver().setVisible(true);
            }
        });
    }

    @Override
    public void chatCreated(Chat chat, boolean createdLocally)
    {
        chat.addMessageListener(this);
    }

    @Override
    public void processMessage(Chat chat, Message message)
    {
        System.out.printf("Message received from %s\n", message.getFrom());
        System.out.printf("Message type %s\n", message.getType());
        for(PacketExtension pe:message.getExtensions())
        {
            System.out.println(((DefaultPacketExtension)pe).getValue("name"));
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList audioList;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
